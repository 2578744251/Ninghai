{
  "actions": [
    {
      "action": "review",
      "module": "serialize-javascript",
      "resolves": [
        {
          "id": 1426,
          "path": "uglifyjs-webpack-plugin>serialize-javascript",
          "dev": true,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1548,
          "path": "uglifyjs-webpack-plugin>serialize-javascript",
          "dev": true,
          "optional": false,
          "bundled": false
        }
      ]
    }
  ],
  "advisories": {
    "1426": {
      "findings": [
        {
          "version": "1.9.1",
          "paths": [
            "uglifyjs-webpack-plugin>serialize-javascript"
          ]
        }
      ],
      "id": 1426,
      "created": "2019-12-09T15:26:05.019Z",
      "updated": "2019-12-10T19:05:13.433Z",
      "deleted": null,
      "title": "Cross-Site Scripting",
      "found_by": {
        "link": "https://twitter.com/okuryu",
        "name": "Ryuichi Okumura",
        "email": ""
      },
      "reported_by": {
        "link": "https://twitter.com/okuryu",
        "name": "Ryuichi Okumura",
        "email": ""
      },
      "module_name": "serialize-javascript",
      "cves": [
        "CVE-2019-16769"
      ],
      "vulnerable_versions": "<2.1.1",
      "patched_versions": ">=2.1.1",
      "overview": "Versions of `serialize-javascript` prior to 2.1.1 are vulnerable to Cross-Site Scripting (XSS). The package fails to sanitize serialized regular expressions. This vulnerability does not affect Node.js applications.",
      "recommendation": "Upgrade to version 2.1.1 or later.",
      "references": "- [GitHub advisory](https://github.com/yahoo/serialize-javascript/security/advisories/GHSA-h9rv-jmmf-4pgx)",
      "access": "public",
      "severity": "moderate",
      "cwe": "CWE-79",
      "metadata": {
        "module_type": "",
        "exploitability": 3,
        "affected_components": ""
      },
      "url": "https://npmjs.com/advisories/1426"
    },
    "1548": {
      "findings": [
        {
          "version": "1.9.1",
          "paths": [
            "uglifyjs-webpack-plugin>serialize-javascript"
          ]
        }
      ],
      "id": 1548,
      "created": "2020-08-11T17:27:06.358Z",
      "updated": "2020-08-11T17:29:23.710Z",
      "deleted": null,
      "title": "Remote Code Execution",
      "found_by": {
        "link": "",
        "name": "Unknown",
        "email": ""
      },
      "reported_by": {
        "link": "",
        "name": "Unknown",
        "email": ""
      },
      "module_name": "serialize-javascript",
      "cves": [],
      "vulnerable_versions": "<3.1.0",
      "patched_versions": ">=3.1.0",
      "overview": "`serialize-javascript` prior to 3.1.0 allows remote attackers to inject arbitrary code via the function \"deleteFunctions\" within \"index.js\".  \n\nAn object such as `{\"foo\": /1\"/, \"bar\": \"a\\\"@__R-<UID>-0__@\"}` was serialized as `{\"foo\": /1\"/, \"bar\": \"a\\/1\"/}`, which allows an attacker to escape the bar key. This requires the attacker to control the values of both foo and bar and guess the value of <UID>. The UID has a keyspace of approximately 4 billion making it a realistic network attack.  \n  \nThe following proof-of-concept calls console.log() when the running eval():  \n`eval('('+ serialize({\"foo\": /1\" + console.log(1)/i, \"bar\": '\"@__R-<UID>-0__@'}) + ')');`",
      "recommendation": "Upgrade to version 3.1.0 or later.",
      "references": "- [GitHub Advisory](https://github.com/advisories/GHSA-hxcc-f52p-wc94)",
      "access": "public",
      "severity": "high",
      "cwe": "CWE-",
      "metadata": {
        "module_type": "",
        "exploitability": 4,
        "affected_components": ""
      },
      "url": "https://npmjs.com/advisories/1548"
    }
  },
  "muted": [],
  "metadata": {
    "vulnerabilities": {
      "info": 0,
      "low": 0,
      "moderate": 1,
      "high": 1,
      "critical": 0
    },
    "dependencies": 19,
    "devDependencies": 1641,
    "optionalDependencies": 15,
    "totalDependencies": 1660
  },
  "runId": "aeaf6666-90a0-415e-81cd-ce7eee57a2a3"
}